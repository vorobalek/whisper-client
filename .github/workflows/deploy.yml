name: Deploy to S3

on:
  push:
    branches: [main]
    paths-ignore:
      - '.github/badges/coverage/**'

jobs:
  build-and-deploy:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Build and publish
        run: npm run publish
      - name: Upload all files except index.html and coverage with cache
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --exclude 'index.html' --exclude 'coverage/**' --cache-control 'public, max-age=86400, immutable' --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
          SOURCE_DIR: dist
      - name: Upload index.html with no-cache
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --exclude '*' --include 'index.html' --cache-control 'no-cache' --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
          SOURCE_DIR: dist
      - name: Upload coverage directory with no-cache
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --exclude '*' --include 'coverage/**' --cache-control 'no-cache' --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
          SOURCE_DIR: dist
      - name: Generate coverage badges
        run: |
          cd packages/whisper-core
          npm install --no-save jest-coverage-badges
          npm run test:badges
          cd ../..
      - name: Copy coverage badges to .github/badges/coverage
        run: |
          mkdir -p .github/badges/coverage
          cp packages/whisper-core/coverage/badge-statements.svg .github/badges/coverage/
          cp packages/whisper-core/coverage/badge-lines.svg .github/badges/coverage/
          cp packages/whisper-core/coverage/badge-functions.svg .github/badges/coverage/
          cp packages/whisper-core/coverage/badge-branches.svg .github/badges/coverage/
      - name: Commit coverage badges
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .github/badges/coverage/badge-statements.svg
          git add .github/badges/coverage/badge-lines.svg
          git add .github/badges/coverage/badge-functions.svg
          git add .github/badges/coverage/badge-branches.svg
          git commit -m 'chore: update coverage badges [skip ci]' || echo "No changes to commit"
          git push 